package com.payroll.govtjutemillpayrollsystem.domain;
// Generated Jul 21, 2018 8:35:28 PM by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * MasterData generated by hbm2java
 */
@Entity
@Table(name="master_data"
    ,catalog="govt_jute_mill_payroll"
)
public class MasterData  implements java.io.Serializable {


     private Integer employeeId;
     private BasicMaster basicMaster;
     private Department department;
     private Designation designation;
     private JobStatus jobStatus;
     private JobType jobType;
     private Mill mill;
     private SalaryStatus salaryStatus;
     private String name;
     private Date dateBirth;
     private String fatherName;
     private String motherName;
     private String homeDistrict;
     private String permanentAddress;
     private Date dateJoinJob;
     private Date dateJoinMill;
     private Date dateRetired;
     private String pfAcNo;
     private String bankAc;
     private String bankName;
     private String bankBranch;
     private Set<MasterAllowance> masterAllowances = new HashSet<MasterAllowance>(0);
     private Set<MasterDeduction> masterDeductions = new HashSet<MasterDeduction>(0);
     private Set<SalaryTranDeduction> salaryTranDeductions = new HashSet<SalaryTranDeduction>(0);
     private Set<SalaryTran> salaryTrans = new HashSet<SalaryTran>(0);
     private Set<SalaryTranAllowance> salaryTranAllowances = new HashSet<SalaryTranAllowance>(0);
     private Set<User> users = new HashSet<User>(0);

    public MasterData() {
    }

	
    public MasterData(BasicMaster basicMaster, Department department, Designation designation, JobStatus jobStatus, JobType jobType, Mill mill, SalaryStatus salaryStatus, String name, Date dateBirth, String fatherName, String motherName, String homeDistrict, String permanentAddress, Date dateJoinJob, Date dateJoinMill, Date dateRetired, String pfAcNo, String bankAc, String bankName, String bankBranch) {
        this.basicMaster = basicMaster;
        this.department = department;
        this.designation = designation;
        this.jobStatus = jobStatus;
        this.jobType = jobType;
        this.mill = mill;
        this.salaryStatus = salaryStatus;
        this.name = name;
        this.dateBirth = dateBirth;
        this.fatherName = fatherName;
        this.motherName = motherName;
        this.homeDistrict = homeDistrict;
        this.permanentAddress = permanentAddress;
        this.dateJoinJob = dateJoinJob;
        this.dateJoinMill = dateJoinMill;
        this.dateRetired = dateRetired;
        this.pfAcNo = pfAcNo;
        this.bankAc = bankAc;
        this.bankName = bankName;
        this.bankBranch = bankBranch;
    }
    public MasterData(BasicMaster basicMaster, Department department, Designation designation, JobStatus jobStatus, JobType jobType, Mill mill, SalaryStatus salaryStatus, String name, Date dateBirth, String fatherName, String motherName, String homeDistrict, String permanentAddress, Date dateJoinJob, Date dateJoinMill, Date dateRetired, String pfAcNo, String bankAc, String bankName, String bankBranch, Set<MasterAllowance> masterAllowances, Set<MasterDeduction> masterDeductions, Set<SalaryTranDeduction> salaryTranDeductions, Set<SalaryTran> salaryTrans, Set<SalaryTranAllowance> salaryTranAllowances, Set<User> users) {
       this.basicMaster = basicMaster;
       this.department = department;
       this.designation = designation;
       this.jobStatus = jobStatus;
       this.jobType = jobType;
       this.mill = mill;
       this.salaryStatus = salaryStatus;
       this.name = name;
       this.dateBirth = dateBirth;
       this.fatherName = fatherName;
       this.motherName = motherName;
       this.homeDistrict = homeDistrict;
       this.permanentAddress = permanentAddress;
       this.dateJoinJob = dateJoinJob;
       this.dateJoinMill = dateJoinMill;
       this.dateRetired = dateRetired;
       this.pfAcNo = pfAcNo;
       this.bankAc = bankAc;
       this.bankName = bankName;
       this.bankBranch = bankBranch;
       this.masterAllowances = masterAllowances;
       this.masterDeductions = masterDeductions;
       this.salaryTranDeductions = salaryTranDeductions;
       this.salaryTrans = salaryTrans;
       this.salaryTranAllowances = salaryTranAllowances;
       this.users = users;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="employee_id", unique=true, nullable=false)
    public Integer getEmployeeId() {
        return this.employeeId;
    }
    
    public void setEmployeeId(Integer employeeId) {
        this.employeeId = employeeId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="basic_id", nullable=false)
    public BasicMaster getBasicMaster() {
        return this.basicMaster;
    }
    
    public void setBasicMaster(BasicMaster basicMaster) {
        this.basicMaster = basicMaster;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="department_id", nullable=false)
    public Department getDepartment() {
        return this.department;
    }
    
    public void setDepartment(Department department) {
        this.department = department;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="designation_id", nullable=false)
    public Designation getDesignation() {
        return this.designation;
    }
    
    public void setDesignation(Designation designation) {
        this.designation = designation;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="job_status_id", nullable=false)
    public JobStatus getJobStatus() {
        return this.jobStatus;
    }
    
    public void setJobStatus(JobStatus jobStatus) {
        this.jobStatus = jobStatus;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="job_type_id", nullable=false)
    public JobType getJobType() {
        return this.jobType;
    }
    
    public void setJobType(JobType jobType) {
        this.jobType = jobType;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="mill_id", nullable=false)
    public Mill getMill() {
        return this.mill;
    }
    
    public void setMill(Mill mill) {
        this.mill = mill;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="salary_status_id", nullable=false)
    public SalaryStatus getSalaryStatus() {
        return this.salaryStatus;
    }
    
    public void setSalaryStatus(SalaryStatus salaryStatus) {
        this.salaryStatus = salaryStatus;
    }

    
    @Column(name="name", nullable=false, length=45)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_birth", nullable=false, length=10)
    public Date getDateBirth() {
        return this.dateBirth;
    }
    
    public void setDateBirth(Date dateBirth) {
        this.dateBirth = dateBirth;
    }

    
    @Column(name="father_name", nullable=false, length=45)
    public String getFatherName() {
        return this.fatherName;
    }
    
    public void setFatherName(String fatherName) {
        this.fatherName = fatherName;
    }

    
    @Column(name="mother_name", nullable=false, length=45)
    public String getMotherName() {
        return this.motherName;
    }
    
    public void setMotherName(String motherName) {
        this.motherName = motherName;
    }

    
    @Column(name="home_district", nullable=false, length=45)
    public String getHomeDistrict() {
        return this.homeDistrict;
    }
    
    public void setHomeDistrict(String homeDistrict) {
        this.homeDistrict = homeDistrict;
    }

    
    @Column(name="permanent_address", nullable=false, length=145)
    public String getPermanentAddress() {
        return this.permanentAddress;
    }
    
    public void setPermanentAddress(String permanentAddress) {
        this.permanentAddress = permanentAddress;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_join_job", nullable=false, length=10)
    public Date getDateJoinJob() {
        return this.dateJoinJob;
    }
    
    public void setDateJoinJob(Date dateJoinJob) {
        this.dateJoinJob = dateJoinJob;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_join_mill", nullable=false, length=10)
    public Date getDateJoinMill() {
        return this.dateJoinMill;
    }
    
    public void setDateJoinMill(Date dateJoinMill) {
        this.dateJoinMill = dateJoinMill;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="date_retired", nullable=false, length=10)
    public Date getDateRetired() {
        return this.dateRetired;
    }
    
    public void setDateRetired(Date dateRetired) {
        this.dateRetired = dateRetired;
    }

    
    @Column(name="pf_ac_no", nullable=false, length=45)
    public String getPfAcNo() {
        return this.pfAcNo;
    }
    
    public void setPfAcNo(String pfAcNo) {
        this.pfAcNo = pfAcNo;
    }

    
    @Column(name="bank_ac", nullable=false, length=45)
    public String getBankAc() {
        return this.bankAc;
    }
    
    public void setBankAc(String bankAc) {
        this.bankAc = bankAc;
    }

    
    @Column(name="bank_name", nullable=false, length=45)
    public String getBankName() {
        return this.bankName;
    }
    
    public void setBankName(String bankName) {
        this.bankName = bankName;
    }

    
    @Column(name="bank_branch", nullable=false, length=45)
    public String getBankBranch() {
        return this.bankBranch;
    }
    
    public void setBankBranch(String bankBranch) {
        this.bankBranch = bankBranch;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<MasterAllowance> getMasterAllowances() {
        return this.masterAllowances;
    }
    
    public void setMasterAllowances(Set<MasterAllowance> masterAllowances) {
        this.masterAllowances = masterAllowances;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<MasterDeduction> getMasterDeductions() {
        return this.masterDeductions;
    }
    
    public void setMasterDeductions(Set<MasterDeduction> masterDeductions) {
        this.masterDeductions = masterDeductions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<SalaryTranDeduction> getSalaryTranDeductions() {
        return this.salaryTranDeductions;
    }
    
    public void setSalaryTranDeductions(Set<SalaryTranDeduction> salaryTranDeductions) {
        this.salaryTranDeductions = salaryTranDeductions;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<SalaryTran> getSalaryTrans() {
        return this.salaryTrans;
    }
    
    public void setSalaryTrans(Set<SalaryTran> salaryTrans) {
        this.salaryTrans = salaryTrans;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<SalaryTranAllowance> getSalaryTranAllowances() {
        return this.salaryTranAllowances;
    }
    
    public void setSalaryTranAllowances(Set<SalaryTranAllowance> salaryTranAllowances) {
        this.salaryTranAllowances = salaryTranAllowances;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="masterData")
    public Set<User> getUsers() {
        return this.users;
    }
    
    public void setUsers(Set<User> users) {
        this.users = users;
    }




}


